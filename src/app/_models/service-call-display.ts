export class ServiceCallDisplay {
  id: number;
  mergedIntoServiceCallID: number;
  originationDate: Date;
  originationDateString: string;
  workOrderNumber: string;
  equipmentType: string;
  equipmentTypeAbbreviation: string;
  serviceCallType: string;
  serviceCallTypeAbbreviation: string;
  billToCustomer: string;
  billToCustomerAbbreviation: string;
  customer: string;
  customerID: number; // new
  customerAbbreviation: string;
  dispatchingOffice: string;
  storeNumber: string;
  address: string;
  city: string;
  cityState: string;
  state: string;
  zip: string;
  latitude: string;
  longitude: string;
  assignedTo: string;
  assignedToID: number;
  statusDateString: string;
  status: string;
  invoiceNumber: string;
  fullAddress: string;
  phone: string;
  serviceCallSource: string;
  workOrderDateTimeString: string;
  slaDateString: string;
  escalatedDateString: string;
  escalatedReason: string;
  rejectedReason: string;
  returnReason: string;

  cancelledReason: string;
  partHoldChangeReason: string;
  quoteHoldApprovedRejectedReason: string;
  noChargeReason: string;
  workflowRejectedReason: string;

  reasonForService: string;
  natureOfCall: string;
  partHoldApproved: boolean;
  selected: boolean;
  fail: boolean;
  critical: boolean;
  warning: boolean;
  priority: boolean;
  refurbishingCall: boolean;
  serviceCodesRequired: boolean;
  priorityNumber: number;
  escalated: boolean;
  tag: string;
  tagID: number;
  contactName: string;
  contactPhone: string;
  serviceCallTypeID: number;
  serviceCallStateID: number;
  flags: string;
  total: number;
  notToExceed: number;
  notToExceedEstimate: number;
  serviceCallDate: Date;
  serviceCallDateString: string;
  billingServiceCallDate: Date;
  // partHoldParts: PartHoldPart[];
  dispatchingNotes: string;
  storeBrandID: number;
  storeBrandName: string;
  storeBrandOther: string;
  callsAtLocation: string;
  billingState: string;
  billingStateID: number;
  bucket: string;
  bucketID: number;
  billingOffice: string;
  billingOfficeID: number;
  originationOffice: string;
  originationOfficeID: number;
  auditName: string;
  auditID: number;
  auditTypeID: number;
  project: string;
  projectID: number;
  userCanAdd: boolean;
  storeAddress: string;
  storeFullAddress: string;
  storeCity: string;
  storeCityState: string;
  storeState: string;
  storeStateID: number;
  storeZip: string;
  storePhone: string;
  storeLatitude: string;
  storeLongitude: string;
  storeStoreNumber: string;
  preauthorizationNumber: string;
  preauthorizationAmount: string;
  callerName: string;
  callerPhone: string;

  scheduledDateString: string;
  tentativeDateString: string;
  approvalCode: string;
  outOfContract: string;
  make: string;
  model: string;
  serialNumber: string;
  followUpCallMade: boolean;
  timeIn: string;
  timeOut: string;
  beginTravel: string;
  endTravel: string;
  startMileage: number;
  endMileage: number;
  repeatCall: boolean;
  overTime: boolean;
  enteredByOtherOffice: boolean;

  shippingStatus: string;
  dueDateString: string;
  shipDateString: string;
  trackingNumber: string;
  taxExempt: string;
  taxExemptBool: boolean;
  notes: string;
  quoteNumber: string;
  callLogCount: number;

  // partHoldApprovalDisplay: PartHoldApprovalDisplay;
  // refurbEquipment: EquipmentDisplay;
  // partDisplays: PartDisplay[];
  // equipmentDisplays: EquipmentDisplay[];
  // callLogDisplays: CallLogDisplay[];
  // attachments: Attachment[];
  // photos: Photo[];
  comments: Comment[];
  // commentDisplays: CommentDisplay[];
  // serviceCallStateLogDisplays: ServiceCallStateLogDisplay[];
  modisCallType: string;
  followUpBool: boolean;
  rejectedBool: boolean;
  transmittedBool: boolean;
  internalBool: boolean;
  workflowStateID: number;
  billingBucketID: number;
  dispatchingOfficeID: number;
  billToCustomerID: number;
  storeID: number;
  purchasing: boolean;

  mapDisplay: string;
  iconName: string;
  mappable: boolean;
  vip: boolean;

  timeZoneName: string;
}
